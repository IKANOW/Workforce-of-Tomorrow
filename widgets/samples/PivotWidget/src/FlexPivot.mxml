<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" horizontalScrollPolicy="off" verticalScrollPolicy="off"
	width="100%" height="100%" xmlns:pivot="com.flexmonster.pivot.*">
	<mx:Script>
		<![CDATA[
			import com.flexmonster.pivot.data.consts.AggregationName;
			import com.flexmonster.pivot.data.consts.SortType;
			import com.flexmonster.pivot.events.CellClickEvent;
			import com.flexmonster.pivot.model.config.vo.ReportValueObject;
			import com.flexmonster.pivot.type.DestinationType;
			import com.flexmonster.pivot.type.ExportOptions;
			import com.flexmonster.pivot.type.ExportType;
			import com.flexmonster.pivot.view.ViewType;
			import com.flexmonster.pivot.view.charts.ChartType;
			import com.flexmonster.pivot.view.grid.renderer.PivotGridCellRenderer;
			
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ObjectUtil;
			
			private function get swfFilePath():String {
				// Flex 4
				return (FlexGlobals.topLevelApplication.parameters['swfFilePath'] == null) ? 'flexmonster/' : FlexGlobals.topLevelApplication.parameters['swfFilePath']; 
				// Flex 3
			//	return (Application.application.parameters['swfFilePath'] == null) ? 'flexmonster/' : Application.application.parameters['swfFilePath'];
			}
			
			private function onGridClick(event:Event):void {
				var cell:PivotGridCellRenderer = (event as CellClickEvent).cell;
				var rows:Array = [];
				for (var i:int = 0; i < cell.rows.length; i++) {
					var row:Object = cell.rows[i];
					rows.push(row.hierarchyCaption + "=" + row.caption);
				}
				var rowStr:String = rows.join(", ");
				
				var columns:Array = [];
				for (i = 0; i < cell.columns.length; i++) {
					var column:Object = cell.columns[i];
					columns.push(column.hierarchyCaption + "=" + column.caption);
				}
				var columnStr:String = columns.join(", ");
				
				Alert.show("Rows: " + rowStr + "\nColumns: " + columnStr + "\nValue:" + cell.label);
			}
			
			private function exportRawCSV():void {
				pivotChart.export(ExportType.CSV, null, onExportRawCSV);
			}
			
			private function onExportRawCSV(data:String):void {
				Alert.show(data);
			}
			
			private function saveToServer():void {
				this.pivotChart.save(
					'report.xml',
					DestinationType.SERVER,
					function(response:*):void {
						Alert.show((response as String),'Report was saved!')
					},
					'http://localhost/flex/save.php'
				);
			}
			
			private function saveToFile():void {
				pivotChart.save('report.xml', DestinationType.FILE)
			}
			
			private function executeSQL():void {
				pivotChart.rows = "";
				pivotChart.columns = "";
				pivotChart.measures = "";
				
				var sql:String = "http://infinite.wfot.ikanow.com/api/custom/rdbms/getresults/4e9c77ef17ef3523b657a890?dbid=irs&output.format=csv&query=" + query.text.toString();
				//var sql:String = "http://infinite.wfot.ikanow.com/api/custom/rdbms/getresults/4e9c77ef17ef3523b657a890?dbid=irs&output.format=csv&query=SELECT * FROM \"Q_Workload_Lvl2\"";
				pivotChart.filename = sql;
				
				pivotChart.load();
				//pivotChart.openFieldsList();
			}
			
			protected function cb_changeHandler(evt:ListEvent):void {
				pivotChart.rows = "";
				pivotChart.columns = "";
				pivotChart.measures = "";	
				pivotChart.filename = cb.selectedItem.data;
				
				pivotChart.load()
				
				//pivotChart.openFieldsList();
				
				
				
			}

			private function showExport() {
				exportBox.visible = true;
				reportBox.visible = false;
			}
			private function showReport() {
				reportBox.visible = true;
				exportBox.visible = false;
			}
			
			private function addData():void {
				//this.clearData();
				this.addStructure();
			}
			
			private function addStructure():void {
				pivotChart.addDimension("[Geography]", "Geography");
				pivotChart.addDimension("[Product]", "Product");
				pivotChart.addHierarchy("[Geography]", "[Geography].[Country]", "Country");
				pivotChart.addHierarchy("[Product]", "[Product].[Color]", "Color");
				pivotChart.addHierarchy("[Product]", "[Product].[Category]", "Category");
				pivotChart.addMeasure("[Measures].[Price]", "Price");
				pivotChart.addMeasure("[Measures].[Discount]", "Discount", AggregationName.COUNT);	
			}
			
		
			
		]]>
	</mx:Script>
	
		<mx:Canvas label="Switch View" width="100%" height="100%">
			<mx:HBox id="reportBox" width="100%">
				<mx:Button x="10" y="10" label="Export" width="100" height="90" color="#0000FF" click="showExport()"/>
				<mx:Button x="115" y="10" label="Grid" icon="@Embed(source='images/Table.png')" width="100" height="90" color="#0000FF" click="pivotChart.showGrid()"/>
				<mx:Button x="220" y="10" label="Bar" icon="@Embed(source='images/Bar Chart.png')" width="100" height="90" color="#0000FF" click="pivotChart.showCharts(ChartType.BAR)"/>
				<mx:Button x="325" y="10" label="Line" icon="@Embed(source='images/Line Chart.png')" width="100" height="90" color="#0000FF" click="pivotChart.showCharts(ChartType.LINE)"/>
				<mx:Button x="430" y="10" label="Pie" icon="@Embed(source='images/Pie Chart.png')" width="100" height="90" color="#0000FF" click="pivotChart.showCharts(ChartType.PIE)"/>
				<mx:Button x="535" y="10" label="Fields" width="100" height="90" color="#0000FF" click="pivotChart.openFieldsList()"/>
				<mx:VBox x="640" y="10" width="400" height="90">
					<mx:ComboBox id="cb" prompt="Please Select"
								 selectedIndex="-1"
								 change="cb_changeHandler(event);"
								 width="400" height="20"
								 x="535" y="10">
						<mx:dataProvider>
							<mx:Object label="Run Workload 1" data="qWorkload1.csv" />
							<mx:Object label="Run Workload 2" data="qWorkload2.csv" />
							<mx:Object label="Run Workload Level 2" data="qWorkloadLevel2.csv" />
							<mx:Object label="Run Workforce Level 2" data="qWorkforceLevel2.csv" />
						</mx:dataProvider>
					</mx:ComboBox>
					<mx:TextArea x="535" y="55" id="query" width="400" height="64"/>
				</mx:VBox>
				
				<mx:Button x="1045" y="10" label="Execute SQL" width="100" height="90" color="#0000FF" click="executeSQL()"/>
			</mx:HBox>
			<mx:HBox id="exportBox" visible="false" width="100%">
				<mx:Button x="1140" y="10" label="Report" width="100" height="90" color="#0000FF" click="showReport()"/>
					<mx:Button label="Raw CSV" icon="@Embed(source='images/file_csv.png')" width="100" height="90" color="#0000FF" click="exportRawCSV()"/>
					<mx:Button label="CSV to file" icon="@Embed(source='images/file_csv.png')" width="100" height="90" color="#0000FF" click="pivotChart.export(ExportType.CSV);"/>
					<mx:Button label="Image" icon="@Embed(source='images/file_png.png')" width="100" height="90" color="#0000FF" click="pivotChart.export(ExportType.IMAGE)"/>
					<mx:Button label="PDF" icon="@Embed(source='images/file_pdf.png')" width="100" height="90" color="#0000FF" click="pivotChart.export(ExportType.PDF)"/>
					<mx:Button label="Excel" icon="@Embed(source='images/file_xls.png')" width="100" height="90" color="#0000FF" click="pivotChart.export(ExportType.EXCEL)"/>
					<mx:Button label="Print" icon="@Embed(source='images/printer.png')" width="100" height="90" color="#0000FF" click="pivotChart.print()"/>				
			</mx:HBox>
			
			<pivot:FlexPivotComponent id="pivotChart" width="100%" height="100%" top="100" x="10" 
				  filename="qWorkloadLevel2.csv"
				swfFilePath="{this.swfFilePath}"/>
		</mx:Canvas>
	
</mx:Application>